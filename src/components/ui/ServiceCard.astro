---
// src/components/ui/ServiceCard.astro
import SearchIcon from '../icons/SearchIcon.astro';

export interface Props {
  icon: string;
  title: string;
  description: string;
}

const { icon, title, description } = Astro.props;

// Icon mapping
const iconComponents = {
  search: SearchIcon,
  // All other icons use default SVG
};

const IconComponent = iconComponents[icon as keyof typeof iconComponents];

// Default SVG icons
const defaultIcons = {
  edit: `<svg class="w-6 h-6 text-orange-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
  </svg>`,
  lightbulb: `<svg class="w-6 h-6 text-orange-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
  </svg>`,
  check: `<svg class="w-6 h-6 text-orange-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
  </svg>`,
  trending: `<svg class="w-6 h-6 text-orange-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
  </svg>`,
  strategy: `<svg class="w-6 h-6 text-orange-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
  </svg>`
};
---

<div class="bg-gray-700 p-8 rounded-xl border border-gray-600 hover:border-orange-500 transition-all duration-300 hover:transform hover:scale-105 group">
  <div class="w-12 h-12 bg-orange-500/20 rounded-lg flex items-center justify-center mb-6 group-hover:bg-orange-500/30 transition-colors">
    {IconComponent ? (
      <IconComponent />
    ) : (
      <Fragment set:html={defaultIcons[icon as keyof typeof defaultIcons]} />
    )}
  </div>
  <h3 class="text-xl font-semibold text-white mb-4 group-hover:text-orange-100 transition-colors">{title}</h3>
  <p class="text-gray-300 group-hover:text-gray-200 transition-colors">{description}</p>
</div>